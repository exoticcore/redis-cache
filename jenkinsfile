pipeline {
    agent any

    environment {
        DEV_HOST = "34.87.155.25"
        SSH_CREDENTIALS_ID = "ssh-dev-credentials-id"
        registryCredential = "gcp-credentials-id"
    }

    stages {
        stage ('IaC Terraform Apply') {
            steps {
                echo 'Running Terraform Apply'
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: SSH_CREDENTIALS_ID, keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER'), file(credentialsId: registryCredential, variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    // Copy docker-compose.yaml and redis.conf to the remote host
                    sh '''
                        scp -o StrictHostKeyChecking=no -i $SSH_KEY docker-compose.yaml redis.conf $SSH_USER@$DEV_HOST:/home/$SSH_USER/
                    '''

                    // Run commands on the remote host to deploy the Docker Compose stack
                    sh '''
                        ssh -o StrictHostKeyChecking=no -i $SSH_KEY $SSH_USER@$DEV_HOST << 'EOF'
                        sudo mv /home/$SSH_USER/redis.conf /etc/redis/redis.conf || echo "redis.conf not found"
                        sudo systemctl restart redis || echo "redis service not found"
                        cd /home/$SSH_USER
                        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS || echo "Service account key file not found"
                        gcloud auth configure-docker asia-southeast1-docker.pkg.dev --quiet
                        EOF
                    '''

                    sh "docker compose -f docker-compose.yaml down"
                    sh "docker compose -f docker-compose.yaml up -d"
                }
            }
        }
    }
}