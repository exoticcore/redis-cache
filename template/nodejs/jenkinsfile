pipeline {
    environment {
        registry = "asia-southeast1-docker.pkg.dev/sc-spark/sc-spark-repository/node-cache"
        registryCredential = "gcp-credentials-id"
        dockerImage = ''
    }
    agent any

    stages {
        stage('Unit Test') {
            steps {
                echo 'Running Unit Test'
            }
        }
        stage('Integration Test') {
            steps {
                echo 'Running Integration Test'
            }
        }
        stage('End to End Test') {
            steps {
                echo 'Running End to End Test'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube Analysis'
            }
        }
        stage('Build Image') {
            steps {
                dir('template/nodejs') {
                    script {
                        sh "docker build -t ${registry}:v${env.BUILD_NUMBER} ."
                        echo "image was built ${registry}:v${env.BUILD_NUMBER}"
                    }
                }
                echo 'Build image successfully'
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([file(credentialsId: registryCredential, variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh 'gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS'
                        sh 'gcloud auth configure-docker asia-southeast1-docker.pkg.dev'
                        sh "docker push ${registry}:v${env.BUILD_NUMBER}"
                        sh "docker tag ${registry}:v${env.BUILD_NUMBER} ${registry}:latest"
                        sh "docker push ${registry}:latest"
                    }
                }
                echo 'Push image successfully'
            }
        }
        stage('Remove Docker Image') {
            steps {
                script {
                    sh "docker rmi ${registry}:v${env.BUILD_NUMBER}"
                    sh "docker rmi ${registry}:latest"
                }
            }

            echo 'Remove image successfully'
        }
    }
}